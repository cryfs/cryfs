name: 'Configure conan profile'
description: 'Configure conan profile'
inputs:
  # Note: Many arguments are only supported on Linux/macOS, not on Windows
  arch:
    description: "Which architecture to use for the build"
    required: true
  compiler:
    description: "Which compiler to use for the build"
    required: true
  compiler_version:
    description: "Which compiler version to use for the build"
    required: true
  compiler_executable_cxx:
    description: "Which C++ compiler executable to use for the build"
    required: true
  compiler_executable_c:
    description: "Which C compiler to use for the build"
    required: true
  compiler_libcxx:
    description: "Which C++ standard library to use (e.g. libstdc++11, libc++)"
    required: true
  build_type:
    description: "Which cmake build type to use (e.g. Release, Debug, RelWithDebInfo)"
    required: true
  extra_cxxflags:
    description: "Extra flags to add to the compiler"
    required: true
runs:
  using: "composite"
  steps:
    - name: Setup conan profile (Linux/macOS)
      if: runner.os == 'Linux' || runner.os == 'macOS'
      shell: bash
      run: |
        set -e
        set -v
        mkdir -p "$CONAN_HOME/profiles"
        cat <<EOF > "$CONAN_HOME/profiles/default"
        [settings]
        os=${{ runner.os == 'macOS' && 'Macos' || runner.os }}
        arch=${{inputs.arch}}
        build_type=${{inputs.build_type}}
        compiler=${{inputs.compiler}}
        compiler.cppstd=20
        compiler.libcxx=${{inputs.compiler_libcxx}}
        compiler.version=${{inputs.compiler_version}}
        [conf]
        tools.cmake.cmaketoolchain:generator=Ninja
        tools.build:compiler_executables={"cpp": "${{inputs.compiler_executable_cxx}}", "c": "${{inputs.compiler_executable_c}}"}
        tools.build:cxxflags=${{ inputs.extra_cxxflags }}
        EOF
    - name: Setup conan profile (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
        set -e
        set -v
        mkdir -p "$CONAN_HOME/profiles"
        cat <<EOF > "$CONAN_HOME/profiles/default"
        [settings]
        os=${{ runner.os }}
        arch=x86_64
        build_type=${{inputs.build_type}}
        compiler=${{inputs.compiler}}
        compiler.cppstd=20
        compiler.runtime=dynamic
        compiler.version=${{inputs.compiler_version}}
        [conf]
        tools.cmake.cmaketoolchain:generator=Ninja
        EOF
    - name: Show generated conan profile
      shell: bash
      run: |
        set -e
        set -v
        echo Listing conan profiles
        conan profile list
        echo Default profile path
        conan profile path default
        echo "New conan profile:"
        conan profile show
